library(datasets)
data(iris)
?iris
head(iris)
table(head$species)
table(iris$species)
summary(iris$species)
iris$species
table(iris$Species)
lapply(split(iris, c("sentosa", "versicolor", "virginica")), mean)
sapply(split(iris, c("sentosa", "versicolor", "virginica")), mean)
sapply(split(iris$Sepal.Length, c("sentosa", "versicolor", "virginica")), mean)
tail(iris)
lapply(split(iris$Sepal.Length, c("sentosa", "versicolor", "virginica")), mean)
iris
table(iris)
str(tapply)
tapply(iris, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
rowMeans(iris[, 1:4])
head(iris)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
colMeans(iris)
data(mtcars)
names(mtcars)
head(mtcars)
sapply(mtcars, cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
str(sapply)
str(split)
hp4 <- sapply(split(mtcars$hp, mtcars$cyl), mean)
hp4
abs(hp4$4 - hp4$8)
hp4$4 - hp4$8
hp4[[4]] - hp4[[8]]
hp4[[1]] - hp4[[3]]
abs(hp4[[1]] - hp4[[3]])
mtcars
debus(ls)
debug(ls)
ls
str(ls)
?ls
debug(ls)
.Ob <- 1
ls(pattern = "O")
n
y
n
n
n
n
n
?numeric
y <-100
f <- function(x) {
    y<-5
    x+y
}
f(10)
print(y)
y <-100
f <- function(x) {
    y<<-5
    x+y
}
f(10)
print(y)
?identical
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
makeCacheMatrix(c(1:9),3,3)
makeCacheMatrix(matrix(c(1:9),3,3))
cacheSolve(matrix(c(1:9),3,3))
list
cacheSolve(matrix(c(1:9),3,3))
cacheSolve(matrix(c(1:9),3,3))
source("cachematrix.R")
cacheSolve(matrix(c(1:9),3,3))
cacheSolve(matrix(c(1:9),3,3))
source("cachematrix.R")
cacheSolve(matrix(c(1:9),3,3))
makeCacheMatrix(matrix(c(1:9),3,3))
cacheSolve(matrix(c(1:9),3,3))
source("cachematrix.R")
cacheSolve(matrix(c(1:9),3,3))
m
$getinverse
getinverse
source("cachematrix.R")
makeCacheMatrix(matrix(c(1:9),3,3))
x
?list
rm(list=ls(all=TRUE))
n
n
n
n
n
n
rm(list=ls(all=TRUE))
n
n
n
n
n
source("cachematrix.R")
cachematrix(matrix(c(1:9),3,3))
makeCacheMatrix(matrix(c(1:9(,3,3))
)
)
list
source("cachematrix.R")
makeCacheMatrix(matrix(c(1:9(,3,3))))
mylist
source("cachematrix.R")
makeCacheMatrix(matrix(c(1:9(,3,3))))
mylist
cacheSolve(matrix(c(1:9),3,3))
vector <- makeCacheMatrix(matrix(c(1:9),3,3))
cacheSolve(matrix(c(1:9),3,3))
cacheSolve(test)
cacheSolve(vector)
cacheSolve(matrix(c(1:0),3,3))
cacheSolve(matrix(c(1:0),3,3))
source("cachematrix.R")
cacheSolve(matrix(c(1:0),3,3))
cacheSolve(matrix(c(1:0),3,3))
cacheSolve(matrix(c(1:9),3,3))
cacheSolve(matrix(c(1,2,4,6,9,2),3,3))
cacheSolve(matrix(c(1,0,0,1),2,2))
source("cachematrix.R")
cacheSolve(matrix(c(1,0,0,1),2,2))
cacheSolve(matrix(c(1,0,0,1),2,2))
source("cachematrix.R")
cacheSolve(matrix(c(1,0,0,1),2,2))
source("cachematrix.R")
cacheSolve(matrix(c(1,0,0,1),2,2))
debubg(cacheSolve)
debug(cacheSolve)
cacheSolve(matrix(c(1,0,0,1),2,2))
n
n
n
n
n
cacheSolve(matrix(c(1, 0, 0, 1), 2, 2)))
cacheSolve(matrix(c(1, 0, 0, 1), 2, 2))
n
n
n
n
n
rm(list=ls(all=TRUE))
n
n
n
n
n
q()
q()
q()
n
n
n
n
n
